// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LinearContrastStretching_LinearContrastStretching_Pipeline_VITIS_LOOP_24_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_image_in_AWVALID,
        m_axi_image_in_AWREADY,
        m_axi_image_in_AWADDR,
        m_axi_image_in_AWID,
        m_axi_image_in_AWLEN,
        m_axi_image_in_AWSIZE,
        m_axi_image_in_AWBURST,
        m_axi_image_in_AWLOCK,
        m_axi_image_in_AWCACHE,
        m_axi_image_in_AWPROT,
        m_axi_image_in_AWQOS,
        m_axi_image_in_AWREGION,
        m_axi_image_in_AWUSER,
        m_axi_image_in_WVALID,
        m_axi_image_in_WREADY,
        m_axi_image_in_WDATA,
        m_axi_image_in_WSTRB,
        m_axi_image_in_WLAST,
        m_axi_image_in_WID,
        m_axi_image_in_WUSER,
        m_axi_image_in_ARVALID,
        m_axi_image_in_ARREADY,
        m_axi_image_in_ARADDR,
        m_axi_image_in_ARID,
        m_axi_image_in_ARLEN,
        m_axi_image_in_ARSIZE,
        m_axi_image_in_ARBURST,
        m_axi_image_in_ARLOCK,
        m_axi_image_in_ARCACHE,
        m_axi_image_in_ARPROT,
        m_axi_image_in_ARQOS,
        m_axi_image_in_ARREGION,
        m_axi_image_in_ARUSER,
        m_axi_image_in_RVALID,
        m_axi_image_in_RREADY,
        m_axi_image_in_RDATA,
        m_axi_image_in_RLAST,
        m_axi_image_in_RID,
        m_axi_image_in_RFIFONUM,
        m_axi_image_in_RUSER,
        m_axi_image_in_RRESP,
        m_axi_image_in_BVALID,
        m_axi_image_in_BREADY,
        m_axi_image_in_BRESP,
        m_axi_image_in_BID,
        m_axi_image_in_BUSER,
        m_axi_image_out_AWVALID,
        m_axi_image_out_AWREADY,
        m_axi_image_out_AWADDR,
        m_axi_image_out_AWID,
        m_axi_image_out_AWLEN,
        m_axi_image_out_AWSIZE,
        m_axi_image_out_AWBURST,
        m_axi_image_out_AWLOCK,
        m_axi_image_out_AWCACHE,
        m_axi_image_out_AWPROT,
        m_axi_image_out_AWQOS,
        m_axi_image_out_AWREGION,
        m_axi_image_out_AWUSER,
        m_axi_image_out_WVALID,
        m_axi_image_out_WREADY,
        m_axi_image_out_WDATA,
        m_axi_image_out_WSTRB,
        m_axi_image_out_WLAST,
        m_axi_image_out_WID,
        m_axi_image_out_WUSER,
        m_axi_image_out_ARVALID,
        m_axi_image_out_ARREADY,
        m_axi_image_out_ARADDR,
        m_axi_image_out_ARID,
        m_axi_image_out_ARLEN,
        m_axi_image_out_ARSIZE,
        m_axi_image_out_ARBURST,
        m_axi_image_out_ARLOCK,
        m_axi_image_out_ARCACHE,
        m_axi_image_out_ARPROT,
        m_axi_image_out_ARQOS,
        m_axi_image_out_ARREGION,
        m_axi_image_out_ARUSER,
        m_axi_image_out_RVALID,
        m_axi_image_out_RREADY,
        m_axi_image_out_RDATA,
        m_axi_image_out_RLAST,
        m_axi_image_out_RID,
        m_axi_image_out_RFIFONUM,
        m_axi_image_out_RUSER,
        m_axi_image_out_RRESP,
        m_axi_image_out_BVALID,
        m_axi_image_out_BREADY,
        m_axi_image_out_BRESP,
        m_axi_image_out_BID,
        m_axi_image_out_BUSER,
        image_length,
        low_threshold_cast7,
        sext_ln38_2,
        sext_ln24,
        low_new_threshold,
        high_threshold,
        low_threshold,
        low_new_threshold_cast3,
        low_threshold_cast4,
        image_in_offset,
        image_out_offset,
        high_threshold_cast6,
        sext_ln34_1,
        sext_ln38,
        high_new_threshold
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_image_in_AWVALID;
input   m_axi_image_in_AWREADY;
output  [31:0] m_axi_image_in_AWADDR;
output  [0:0] m_axi_image_in_AWID;
output  [31:0] m_axi_image_in_AWLEN;
output  [2:0] m_axi_image_in_AWSIZE;
output  [1:0] m_axi_image_in_AWBURST;
output  [1:0] m_axi_image_in_AWLOCK;
output  [3:0] m_axi_image_in_AWCACHE;
output  [2:0] m_axi_image_in_AWPROT;
output  [3:0] m_axi_image_in_AWQOS;
output  [3:0] m_axi_image_in_AWREGION;
output  [0:0] m_axi_image_in_AWUSER;
output   m_axi_image_in_WVALID;
input   m_axi_image_in_WREADY;
output  [7:0] m_axi_image_in_WDATA;
output  [0:0] m_axi_image_in_WSTRB;
output   m_axi_image_in_WLAST;
output  [0:0] m_axi_image_in_WID;
output  [0:0] m_axi_image_in_WUSER;
output   m_axi_image_in_ARVALID;
input   m_axi_image_in_ARREADY;
output  [31:0] m_axi_image_in_ARADDR;
output  [0:0] m_axi_image_in_ARID;
output  [31:0] m_axi_image_in_ARLEN;
output  [2:0] m_axi_image_in_ARSIZE;
output  [1:0] m_axi_image_in_ARBURST;
output  [1:0] m_axi_image_in_ARLOCK;
output  [3:0] m_axi_image_in_ARCACHE;
output  [2:0] m_axi_image_in_ARPROT;
output  [3:0] m_axi_image_in_ARQOS;
output  [3:0] m_axi_image_in_ARREGION;
output  [0:0] m_axi_image_in_ARUSER;
input   m_axi_image_in_RVALID;
output   m_axi_image_in_RREADY;
input  [7:0] m_axi_image_in_RDATA;
input   m_axi_image_in_RLAST;
input  [0:0] m_axi_image_in_RID;
input  [10:0] m_axi_image_in_RFIFONUM;
input  [0:0] m_axi_image_in_RUSER;
input  [1:0] m_axi_image_in_RRESP;
input   m_axi_image_in_BVALID;
output   m_axi_image_in_BREADY;
input  [1:0] m_axi_image_in_BRESP;
input  [0:0] m_axi_image_in_BID;
input  [0:0] m_axi_image_in_BUSER;
output   m_axi_image_out_AWVALID;
input   m_axi_image_out_AWREADY;
output  [31:0] m_axi_image_out_AWADDR;
output  [0:0] m_axi_image_out_AWID;
output  [31:0] m_axi_image_out_AWLEN;
output  [2:0] m_axi_image_out_AWSIZE;
output  [1:0] m_axi_image_out_AWBURST;
output  [1:0] m_axi_image_out_AWLOCK;
output  [3:0] m_axi_image_out_AWCACHE;
output  [2:0] m_axi_image_out_AWPROT;
output  [3:0] m_axi_image_out_AWQOS;
output  [3:0] m_axi_image_out_AWREGION;
output  [0:0] m_axi_image_out_AWUSER;
output   m_axi_image_out_WVALID;
input   m_axi_image_out_WREADY;
output  [7:0] m_axi_image_out_WDATA;
output  [0:0] m_axi_image_out_WSTRB;
output   m_axi_image_out_WLAST;
output  [0:0] m_axi_image_out_WID;
output  [0:0] m_axi_image_out_WUSER;
output   m_axi_image_out_ARVALID;
input   m_axi_image_out_ARREADY;
output  [31:0] m_axi_image_out_ARADDR;
output  [0:0] m_axi_image_out_ARID;
output  [31:0] m_axi_image_out_ARLEN;
output  [2:0] m_axi_image_out_ARSIZE;
output  [1:0] m_axi_image_out_ARBURST;
output  [1:0] m_axi_image_out_ARLOCK;
output  [3:0] m_axi_image_out_ARCACHE;
output  [2:0] m_axi_image_out_ARPROT;
output  [3:0] m_axi_image_out_ARQOS;
output  [3:0] m_axi_image_out_ARREGION;
output  [0:0] m_axi_image_out_ARUSER;
input   m_axi_image_out_RVALID;
output   m_axi_image_out_RREADY;
input  [7:0] m_axi_image_out_RDATA;
input   m_axi_image_out_RLAST;
input  [0:0] m_axi_image_out_RID;
input  [10:0] m_axi_image_out_RFIFONUM;
input  [0:0] m_axi_image_out_RUSER;
input  [1:0] m_axi_image_out_RRESP;
input   m_axi_image_out_BVALID;
output   m_axi_image_out_BREADY;
input  [1:0] m_axi_image_out_BRESP;
input  [0:0] m_axi_image_out_BID;
input  [0:0] m_axi_image_out_BUSER;
input  [31:0] image_length;
input  [7:0] low_threshold_cast7;
input  [8:0] sext_ln38_2;
input  [8:0] sext_ln24;
input  [7:0] low_new_threshold;
input  [7:0] high_threshold;
input  [7:0] low_threshold;
input  [7:0] low_new_threshold_cast3;
input  [7:0] low_threshold_cast4;
input  [31:0] image_in_offset;
input  [31:0] image_out_offset;
input  [7:0] high_threshold_cast6;
input  [8:0] sext_ln34_1;
input  [8:0] sext_ln38;
input  [7:0] high_new_threshold;

reg ap_idle;
reg m_axi_image_in_ARVALID;
reg m_axi_image_in_RREADY;
reg m_axi_image_out_AWVALID;
reg[31:0] m_axi_image_out_AWADDR;
reg m_axi_image_out_WVALID;
reg[7:0] m_axi_image_out_WDATA;
reg m_axi_image_out_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
reg   [0:0] icmp_ln24_reg_636;
reg    ap_block_state2_io;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
reg   [0:0] icmp_ln24_reg_636_pp0_iter4_reg;
reg    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
reg   [0:0] icmp_ln28_reg_646;
reg   [0:0] icmp_ln28_reg_646_pp0_iter16_reg;
reg   [0:0] icmp_ln28_1_reg_669;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter15_reg;
reg    ap_block_state34_io;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter18_reg;
reg    ap_block_state40_pp0_stage1_iter19;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    image_in_blk_n_AR;
wire    ap_block_pp0_stage1;
reg    image_in_blk_n_R;
wire    ap_block_pp0_stage0;
reg    image_out_blk_n_AW;
reg    image_out_blk_n_W;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter16_reg;
reg    image_out_blk_n_B;
reg   [0:0] icmp_ln28_reg_646_pp0_iter15_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter18_reg;
reg   [7:0] reg_284;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
reg    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
reg    ap_block_state33_io;
wire    ap_block_state35_pp0_stage0_iter17;
reg    ap_block_state35_io;
wire    ap_block_state37_pp0_stage0_iter18;
reg    ap_block_state39_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] reg_288;
reg   [31:0] reg_288_pp0_iter6_reg;
reg   [31:0] reg_288_pp0_iter7_reg;
reg   [31:0] reg_288_pp0_iter8_reg;
reg   [31:0] reg_288_pp0_iter9_reg;
reg   [31:0] reg_288_pp0_iter10_reg;
reg   [31:0] reg_288_pp0_iter11_reg;
reg   [31:0] reg_288_pp0_iter12_reg;
reg   [31:0] reg_288_pp0_iter13_reg;
reg   [31:0] reg_288_pp0_iter14_reg;
reg   [31:0] reg_288_pp0_iter15_reg;
reg   [31:0] reg_296;
wire   [0:0] grp_fu_304_p2;
reg   [31:0] reg_296_pp0_iter6_reg;
reg   [31:0] reg_296_pp0_iter7_reg;
reg   [31:0] reg_296_pp0_iter8_reg;
reg   [31:0] reg_296_pp0_iter9_reg;
reg   [31:0] reg_296_pp0_iter10_reg;
reg   [31:0] reg_296_pp0_iter11_reg;
reg   [31:0] reg_296_pp0_iter12_reg;
reg   [31:0] reg_296_pp0_iter13_reg;
reg   [31:0] reg_296_pp0_iter14_reg;
reg   [31:0] reg_296_pp0_iter15_reg;
wire  signed [16:0] sext_ln38_cast_fu_314_p1;
reg  signed [16:0] sext_ln38_cast_reg_581;
wire  signed [16:0] sext_ln34_1_cast_fu_318_p1;
reg  signed [16:0] sext_ln34_1_cast_reg_587;
wire   [8:0] high_threshold_cast6_cast_fu_322_p1;
reg   [8:0] high_threshold_cast6_cast_reg_593;
wire   [15:0] low_threshold_cast4_cast_fu_326_p1;
reg   [15:0] low_threshold_cast4_cast_reg_599;
wire   [15:0] low_new_threshold_cast3_cast_fu_330_p1;
reg   [15:0] low_new_threshold_cast3_cast_reg_605;
wire  signed [16:0] sext_ln24_cast_fu_334_p1;
reg  signed [16:0] sext_ln24_cast_reg_611;
wire  signed [16:0] sext_ln38_2_cast_fu_338_p1;
reg  signed [16:0] sext_ln38_2_cast_reg_617;
wire   [8:0] low_threshold_cast7_cast_fu_342_p1;
reg   [8:0] low_threshold_cast7_cast_reg_623;
reg   [31:0] idx_3_reg_629;
reg   [31:0] idx_3_reg_629_pp0_iter1_reg;
reg   [31:0] idx_3_reg_629_pp0_iter2_reg;
reg   [31:0] idx_3_reg_629_pp0_iter3_reg;
reg   [31:0] idx_3_reg_629_pp0_iter4_reg;
reg   [31:0] idx_3_reg_629_pp0_iter5_reg;
wire   [0:0] icmp_ln24_fu_354_p2;
reg   [0:0] icmp_ln24_reg_636_pp0_iter1_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter2_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter3_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter5_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter6_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter7_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter8_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter9_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter10_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter11_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter12_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter13_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter14_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter15_reg;
reg   [0:0] icmp_ln24_reg_636_pp0_iter16_reg;
reg   [31:0] image_in_addr_reg_640;
reg   [0:0] icmp_ln28_reg_646_pp0_iter6_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter7_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter8_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter9_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter10_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter11_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter12_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter13_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter14_reg;
reg   [0:0] icmp_ln28_reg_646_pp0_iter17_reg;
wire   [0:0] grp_fu_309_p2;
reg   [0:0] icmp_ln32_reg_650;
reg   [0:0] icmp_ln32_reg_650_pp0_iter6_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter7_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter8_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter9_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter10_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter11_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter12_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter13_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter14_reg;
reg   [0:0] icmp_ln32_reg_650_pp0_iter15_reg;
wire   [16:0] mul_ln38_fu_399_p2;
reg   [16:0] mul_ln38_reg_654;
wire   [16:0] mul_ln34_fu_413_p2;
reg   [16:0] mul_ln34_reg_659;
wire   [15:0] mul_ln30_fu_418_p2;
reg   [15:0] mul_ln30_reg_664;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter6_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter7_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter8_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter9_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter10_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter11_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter12_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter13_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter14_reg;
reg   [0:0] icmp_ln28_1_reg_669_pp0_iter17_reg;
reg   [0:0] icmp_ln32_1_reg_673;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter6_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter7_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter8_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter9_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter10_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter11_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter12_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter13_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter14_reg;
reg   [0:0] icmp_ln32_1_reg_673_pp0_iter15_reg;
wire   [16:0] mul_ln38_1_fu_468_p2;
reg   [16:0] mul_ln38_1_reg_677;
wire   [16:0] mul_ln34_1_fu_482_p2;
reg   [16:0] mul_ln34_1_reg_682;
wire   [15:0] mul_ln30_1_fu_487_p2;
reg   [15:0] mul_ln30_1_reg_687;
wire   [7:0] grp_fu_447_p2;
reg   [7:0] udiv_ln30_reg_692;
reg   [7:0] udiv_ln30_reg_692_pp0_iter16_reg;
wire   [7:0] grp_fu_439_p2;
reg   [7:0] sdiv_ln38_reg_697;
wire   [7:0] grp_fu_443_p2;
reg   [7:0] sdiv_ln34_reg_702;
wire   [7:0] grp_fu_500_p2;
reg   [7:0] udiv_ln30_1_reg_707;
reg   [7:0] udiv_ln30_1_reg_707_pp0_iter16_reg;
wire   [7:0] add_ln38_fu_507_p2;
wire   [7:0] add_ln34_fu_515_p2;
wire   [7:0] add_ln38_1_fu_524_p2;
reg   [7:0] add_ln38_1_reg_722;
wire   [7:0] add_ln34_1_fu_533_p2;
reg   [7:0] add_ln34_1_reg_727;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [7:0] ap_phi_reg_pp0_iter0_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter1_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter2_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter3_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter4_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter5_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter6_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter7_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter8_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter9_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter10_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter11_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter12_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter13_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter14_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter15_storereflowmerge_reg_254;
reg   [7:0] ap_phi_reg_pp0_iter16_storereflowmerge_reg_254;
wire   [7:0] ap_phi_reg_pp0_iter0_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter1_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter2_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter3_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter4_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter5_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter6_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter7_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter8_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter9_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter10_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter11_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter12_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter13_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter14_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter15_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter16_storereflowmerge3_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter17_storereflowmerge3_reg_264;
wire   [31:0] add_ln28_1_fu_423_p2;
wire   [31:0] add_ln28_2_fu_433_p2;
wire   [31:0] add_ln28_fu_360_p2;
reg    ap_block_pp0_stage1_01001;
wire   [7:0] trunc_ln30_fu_538_p1;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln30_1_fu_542_p1;
reg   [31:0] idx_fu_84;
wire   [31:0] idx_5_fu_372_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_idx_3;
wire   [8:0] zext_ln28_fu_382_p1;
wire  signed [8:0] sub_ln38_fu_390_p2;
wire  signed [8:0] mul_ln38_fu_399_p1;
wire  signed [8:0] sub_ln34_fu_404_p2;
wire  signed [8:0] mul_ln34_fu_413_p1;
wire   [7:0] mul_ln30_fu_418_p0;
wire   [7:0] mul_ln30_fu_418_p1;
wire   [31:0] idx_4_fu_428_p2;
wire  signed [8:0] grp_fu_439_p1;
wire  signed [8:0] grp_fu_443_p1;
wire   [7:0] grp_fu_447_p1;
wire   [8:0] zext_ln28_2_fu_451_p1;
wire  signed [8:0] sub_ln38_1_fu_459_p2;
wire  signed [8:0] mul_ln38_1_fu_468_p1;
wire  signed [8:0] sub_ln34_1_fu_473_p2;
wire  signed [8:0] mul_ln34_1_fu_482_p1;
wire   [7:0] mul_ln30_1_fu_487_p0;
wire   [7:0] mul_ln30_1_fu_487_p1;
wire  signed [8:0] grp_fu_492_p1;
wire  signed [8:0] grp_fu_496_p1;
wire   [7:0] grp_fu_500_p1;
wire   [7:0] trunc_ln38_fu_504_p1;
wire   [7:0] trunc_ln34_fu_512_p1;
wire   [7:0] grp_fu_492_p2;
wire   [7:0] trunc_ln38_1_fu_520_p1;
wire   [7:0] grp_fu_496_p2;
wire   [7:0] trunc_ln34_1_fu_529_p1;
reg    grp_fu_439_ce;
reg    grp_fu_443_ce;
reg    grp_fu_447_ce;
reg    grp_fu_492_ce;
reg    grp_fu_496_ce;
reg    grp_fu_500_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to19;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] mul_ln30_1_fu_487_p00;
wire   [15:0] mul_ln30_fu_418_p00;
reg    ap_condition_924;
reg    ap_condition_927;
reg    ap_condition_901;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

LinearContrastStretching_mul_9s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9s_9s_17_1_1_U1(
    .din0(sub_ln38_fu_390_p2),
    .din1(mul_ln38_fu_399_p1),
    .dout(mul_ln38_fu_399_p2)
);

LinearContrastStretching_mul_9s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9s_9s_17_1_1_U2(
    .din0(sub_ln34_fu_404_p2),
    .din1(mul_ln34_fu_413_p1),
    .dout(mul_ln34_fu_413_p2)
);

LinearContrastStretching_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(mul_ln30_fu_418_p0),
    .din1(mul_ln30_fu_418_p1),
    .dout(mul_ln30_fu_418_p2)
);

LinearContrastStretching_sdiv_17ns_9s_8_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
sdiv_17ns_9s_8_21_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln38_reg_654),
    .din1(grp_fu_439_p1),
    .ce(grp_fu_439_ce),
    .dout(grp_fu_439_p2)
);

LinearContrastStretching_sdiv_17ns_9s_8_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
sdiv_17ns_9s_8_21_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln34_reg_659),
    .din1(grp_fu_443_p1),
    .ce(grp_fu_443_ce),
    .dout(grp_fu_443_p2)
);

LinearContrastStretching_udiv_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_16ns_8ns_8_20_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln30_reg_664),
    .din1(grp_fu_447_p1),
    .ce(grp_fu_447_ce),
    .dout(grp_fu_447_p2)
);

LinearContrastStretching_mul_9s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9s_9s_17_1_1_U7(
    .din0(sub_ln38_1_fu_459_p2),
    .din1(mul_ln38_1_fu_468_p1),
    .dout(mul_ln38_1_fu_468_p2)
);

LinearContrastStretching_mul_9s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9s_9s_17_1_1_U8(
    .din0(sub_ln34_1_fu_473_p2),
    .din1(mul_ln34_1_fu_482_p1),
    .dout(mul_ln34_1_fu_482_p2)
);

LinearContrastStretching_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U9(
    .din0(mul_ln30_1_fu_487_p0),
    .din1(mul_ln30_1_fu_487_p1),
    .dout(mul_ln30_1_fu_487_p2)
);

LinearContrastStretching_sdiv_17ns_9s_8_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
sdiv_17ns_9s_8_21_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln38_1_reg_677),
    .din1(grp_fu_492_p1),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p2)
);

LinearContrastStretching_sdiv_17ns_9s_8_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
sdiv_17ns_9s_8_21_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln34_1_reg_682),
    .din1(grp_fu_496_p1),
    .ce(grp_fu_496_ce),
    .dout(grp_fu_496_p2)
);

LinearContrastStretching_udiv_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_16ns_8ns_8_20_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln30_1_reg_687),
    .din1(grp_fu_500_p1),
    .ce(grp_fu_500_ce),
    .dout(grp_fu_500_p2)
);

LinearContrastStretching_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln32_reg_650_pp0_iter15_reg == 1'd0) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter16_storereflowmerge_reg_254 <= add_ln38_fu_507_p2;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln32_reg_650_pp0_iter15_reg == 1'd1) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter16_storereflowmerge_reg_254 <= add_ln34_fu_515_p2;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter16_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter15_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_901)) begin
        if ((1'b1 == ap_condition_927)) begin
            ap_phi_reg_pp0_iter17_storereflowmerge3_reg_264 <= add_ln38_1_reg_722;
        end else if ((1'b1 == ap_condition_924)) begin
            ap_phi_reg_pp0_iter17_storereflowmerge3_reg_264 <= add_ln34_1_reg_727;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter17_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter16_storereflowmerge3_reg_264;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx_fu_84 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636 == 1'd1))) begin
        idx_fu_84 <= idx_5_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_reg_673_pp0_iter15_reg == 1'd1) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln34_1_reg_727 <= add_ln34_1_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_reg_673_pp0_iter15_reg == 1'd0) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln38_1_reg_722 <= add_ln38_1_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln28_1_reg_669_pp0_iter10_reg <= icmp_ln28_1_reg_669_pp0_iter9_reg;
        icmp_ln28_1_reg_669_pp0_iter11_reg <= icmp_ln28_1_reg_669_pp0_iter10_reg;
        icmp_ln28_1_reg_669_pp0_iter12_reg <= icmp_ln28_1_reg_669_pp0_iter11_reg;
        icmp_ln28_1_reg_669_pp0_iter13_reg <= icmp_ln28_1_reg_669_pp0_iter12_reg;
        icmp_ln28_1_reg_669_pp0_iter14_reg <= icmp_ln28_1_reg_669_pp0_iter13_reg;
        icmp_ln28_1_reg_669_pp0_iter15_reg <= icmp_ln28_1_reg_669_pp0_iter14_reg;
        icmp_ln28_1_reg_669_pp0_iter16_reg <= icmp_ln28_1_reg_669_pp0_iter15_reg;
        icmp_ln28_1_reg_669_pp0_iter17_reg <= icmp_ln28_1_reg_669_pp0_iter16_reg;
        icmp_ln28_1_reg_669_pp0_iter18_reg <= icmp_ln28_1_reg_669_pp0_iter17_reg;
        icmp_ln28_1_reg_669_pp0_iter6_reg <= icmp_ln28_1_reg_669;
        icmp_ln28_1_reg_669_pp0_iter7_reg <= icmp_ln28_1_reg_669_pp0_iter6_reg;
        icmp_ln28_1_reg_669_pp0_iter8_reg <= icmp_ln28_1_reg_669_pp0_iter7_reg;
        icmp_ln28_1_reg_669_pp0_iter9_reg <= icmp_ln28_1_reg_669_pp0_iter8_reg;
        icmp_ln32_1_reg_673_pp0_iter10_reg <= icmp_ln32_1_reg_673_pp0_iter9_reg;
        icmp_ln32_1_reg_673_pp0_iter11_reg <= icmp_ln32_1_reg_673_pp0_iter10_reg;
        icmp_ln32_1_reg_673_pp0_iter12_reg <= icmp_ln32_1_reg_673_pp0_iter11_reg;
        icmp_ln32_1_reg_673_pp0_iter13_reg <= icmp_ln32_1_reg_673_pp0_iter12_reg;
        icmp_ln32_1_reg_673_pp0_iter14_reg <= icmp_ln32_1_reg_673_pp0_iter13_reg;
        icmp_ln32_1_reg_673_pp0_iter15_reg <= icmp_ln32_1_reg_673_pp0_iter14_reg;
        icmp_ln32_1_reg_673_pp0_iter6_reg <= icmp_ln32_1_reg_673;
        icmp_ln32_1_reg_673_pp0_iter7_reg <= icmp_ln32_1_reg_673_pp0_iter6_reg;
        icmp_ln32_1_reg_673_pp0_iter8_reg <= icmp_ln32_1_reg_673_pp0_iter7_reg;
        icmp_ln32_1_reg_673_pp0_iter9_reg <= icmp_ln32_1_reg_673_pp0_iter8_reg;
        reg_288_pp0_iter10_reg <= reg_288_pp0_iter9_reg;
        reg_288_pp0_iter11_reg <= reg_288_pp0_iter10_reg;
        reg_288_pp0_iter12_reg <= reg_288_pp0_iter11_reg;
        reg_288_pp0_iter13_reg <= reg_288_pp0_iter12_reg;
        reg_288_pp0_iter14_reg <= reg_288_pp0_iter13_reg;
        reg_288_pp0_iter15_reg <= reg_288_pp0_iter14_reg;
        reg_288_pp0_iter6_reg <= reg_288;
        reg_288_pp0_iter7_reg <= reg_288_pp0_iter6_reg;
        reg_288_pp0_iter8_reg <= reg_288_pp0_iter7_reg;
        reg_288_pp0_iter9_reg <= reg_288_pp0_iter8_reg;
        reg_296_pp0_iter10_reg <= reg_296_pp0_iter9_reg;
        reg_296_pp0_iter11_reg <= reg_296_pp0_iter10_reg;
        reg_296_pp0_iter12_reg <= reg_296_pp0_iter11_reg;
        reg_296_pp0_iter13_reg <= reg_296_pp0_iter12_reg;
        reg_296_pp0_iter14_reg <= reg_296_pp0_iter13_reg;
        reg_296_pp0_iter15_reg <= reg_296_pp0_iter14_reg;
        reg_296_pp0_iter6_reg <= reg_296;
        reg_296_pp0_iter7_reg <= reg_296_pp0_iter6_reg;
        reg_296_pp0_iter8_reg <= reg_296_pp0_iter7_reg;
        reg_296_pp0_iter9_reg <= reg_296_pp0_iter8_reg;
        udiv_ln30_1_reg_707_pp0_iter16_reg <= udiv_ln30_1_reg_707;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter10_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter9_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter10_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter9_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter11_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter10_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter11_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter10_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter12_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter11_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter12_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter11_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter13_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter12_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter13_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter12_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter14_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter13_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter14_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter13_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter15_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter14_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter15_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter14_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter16_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter15_storereflowmerge3_reg_264;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter0_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter1_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter0_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter1_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter2_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter1_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter2_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter3_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter2_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter3_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter4_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter3_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter4_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter5_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter4_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter5_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter6_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter5_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter6_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter7_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter6_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter7_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter8_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter7_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_storereflowmerge3_reg_264 <= ap_phi_reg_pp0_iter8_storereflowmerge3_reg_264;
        ap_phi_reg_pp0_iter9_storereflowmerge_reg_254 <= ap_phi_reg_pp0_iter8_storereflowmerge_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        high_threshold_cast6_cast_reg_593[7 : 0] <= high_threshold_cast6_cast_fu_322_p1[7 : 0];
        icmp_ln24_reg_636 <= icmp_ln24_fu_354_p2;
        icmp_ln24_reg_636_pp0_iter10_reg <= icmp_ln24_reg_636_pp0_iter9_reg;
        icmp_ln24_reg_636_pp0_iter11_reg <= icmp_ln24_reg_636_pp0_iter10_reg;
        icmp_ln24_reg_636_pp0_iter12_reg <= icmp_ln24_reg_636_pp0_iter11_reg;
        icmp_ln24_reg_636_pp0_iter13_reg <= icmp_ln24_reg_636_pp0_iter12_reg;
        icmp_ln24_reg_636_pp0_iter14_reg <= icmp_ln24_reg_636_pp0_iter13_reg;
        icmp_ln24_reg_636_pp0_iter15_reg <= icmp_ln24_reg_636_pp0_iter14_reg;
        icmp_ln24_reg_636_pp0_iter16_reg <= icmp_ln24_reg_636_pp0_iter15_reg;
        icmp_ln24_reg_636_pp0_iter1_reg <= icmp_ln24_reg_636;
        icmp_ln24_reg_636_pp0_iter2_reg <= icmp_ln24_reg_636_pp0_iter1_reg;
        icmp_ln24_reg_636_pp0_iter3_reg <= icmp_ln24_reg_636_pp0_iter2_reg;
        icmp_ln24_reg_636_pp0_iter4_reg <= icmp_ln24_reg_636_pp0_iter3_reg;
        icmp_ln24_reg_636_pp0_iter5_reg <= icmp_ln24_reg_636_pp0_iter4_reg;
        icmp_ln24_reg_636_pp0_iter6_reg <= icmp_ln24_reg_636_pp0_iter5_reg;
        icmp_ln24_reg_636_pp0_iter7_reg <= icmp_ln24_reg_636_pp0_iter6_reg;
        icmp_ln24_reg_636_pp0_iter8_reg <= icmp_ln24_reg_636_pp0_iter7_reg;
        icmp_ln24_reg_636_pp0_iter9_reg <= icmp_ln24_reg_636_pp0_iter8_reg;
        icmp_ln28_reg_646_pp0_iter10_reg <= icmp_ln28_reg_646_pp0_iter9_reg;
        icmp_ln28_reg_646_pp0_iter11_reg <= icmp_ln28_reg_646_pp0_iter10_reg;
        icmp_ln28_reg_646_pp0_iter12_reg <= icmp_ln28_reg_646_pp0_iter11_reg;
        icmp_ln28_reg_646_pp0_iter13_reg <= icmp_ln28_reg_646_pp0_iter12_reg;
        icmp_ln28_reg_646_pp0_iter14_reg <= icmp_ln28_reg_646_pp0_iter13_reg;
        icmp_ln28_reg_646_pp0_iter15_reg <= icmp_ln28_reg_646_pp0_iter14_reg;
        icmp_ln28_reg_646_pp0_iter16_reg <= icmp_ln28_reg_646_pp0_iter15_reg;
        icmp_ln28_reg_646_pp0_iter17_reg <= icmp_ln28_reg_646_pp0_iter16_reg;
        icmp_ln28_reg_646_pp0_iter18_reg <= icmp_ln28_reg_646_pp0_iter17_reg;
        icmp_ln28_reg_646_pp0_iter6_reg <= icmp_ln28_reg_646;
        icmp_ln28_reg_646_pp0_iter7_reg <= icmp_ln28_reg_646_pp0_iter6_reg;
        icmp_ln28_reg_646_pp0_iter8_reg <= icmp_ln28_reg_646_pp0_iter7_reg;
        icmp_ln28_reg_646_pp0_iter9_reg <= icmp_ln28_reg_646_pp0_iter8_reg;
        icmp_ln32_reg_650_pp0_iter10_reg <= icmp_ln32_reg_650_pp0_iter9_reg;
        icmp_ln32_reg_650_pp0_iter11_reg <= icmp_ln32_reg_650_pp0_iter10_reg;
        icmp_ln32_reg_650_pp0_iter12_reg <= icmp_ln32_reg_650_pp0_iter11_reg;
        icmp_ln32_reg_650_pp0_iter13_reg <= icmp_ln32_reg_650_pp0_iter12_reg;
        icmp_ln32_reg_650_pp0_iter14_reg <= icmp_ln32_reg_650_pp0_iter13_reg;
        icmp_ln32_reg_650_pp0_iter15_reg <= icmp_ln32_reg_650_pp0_iter14_reg;
        icmp_ln32_reg_650_pp0_iter6_reg <= icmp_ln32_reg_650;
        icmp_ln32_reg_650_pp0_iter7_reg <= icmp_ln32_reg_650_pp0_iter6_reg;
        icmp_ln32_reg_650_pp0_iter8_reg <= icmp_ln32_reg_650_pp0_iter7_reg;
        icmp_ln32_reg_650_pp0_iter9_reg <= icmp_ln32_reg_650_pp0_iter8_reg;
        idx_3_reg_629 <= ap_sig_allocacmp_idx_3;
        idx_3_reg_629_pp0_iter1_reg <= idx_3_reg_629;
        idx_3_reg_629_pp0_iter2_reg <= idx_3_reg_629_pp0_iter1_reg;
        idx_3_reg_629_pp0_iter3_reg <= idx_3_reg_629_pp0_iter2_reg;
        idx_3_reg_629_pp0_iter4_reg <= idx_3_reg_629_pp0_iter3_reg;
        idx_3_reg_629_pp0_iter5_reg <= idx_3_reg_629_pp0_iter4_reg;
        low_new_threshold_cast3_cast_reg_605[7 : 0] <= low_new_threshold_cast3_cast_fu_330_p1[7 : 0];
        low_threshold_cast4_cast_reg_599[7 : 0] <= low_threshold_cast4_cast_fu_326_p1[7 : 0];
        low_threshold_cast7_cast_reg_623[7 : 0] <= low_threshold_cast7_cast_fu_342_p1[7 : 0];
        sext_ln24_cast_reg_611 <= sext_ln24_cast_fu_334_p1;
        sext_ln34_1_cast_reg_587 <= sext_ln34_1_cast_fu_318_p1;
        sext_ln38_2_cast_reg_617 <= sext_ln38_2_cast_fu_338_p1;
        sext_ln38_cast_reg_581 <= sext_ln38_cast_fu_314_p1;
        udiv_ln30_reg_692_pp0_iter16_reg <= udiv_ln30_reg_692;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_636_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln28_1_reg_669 <= grp_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1))) begin
        icmp_ln28_reg_646 <= grp_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_304_p2 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln32_1_reg_673 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_304_p2 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln32_reg_650 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_354_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_in_addr_reg_640 <= add_ln28_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_304_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln30_1_reg_687 <= mul_ln30_1_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_304_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln30_reg_664 <= mul_ln30_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_309_p2 == 1'd1) & (icmp_ln24_reg_636_pp0_iter5_reg == 1'd1) & (grp_fu_304_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln34_1_reg_682 <= mul_ln34_1_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_309_p2 == 1'd1) & (grp_fu_304_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1))) begin
        mul_ln34_reg_659 <= mul_ln34_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_309_p2 == 1'd0) & (icmp_ln24_reg_636_pp0_iter5_reg == 1'd1) & (grp_fu_304_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln38_1_reg_677 <= mul_ln38_1_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_309_p2 == 1'd0) & (grp_fu_304_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1))) begin
        mul_ln38_reg_654 <= mul_ln38_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)))) begin
        reg_284 <= m_axi_image_in_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_reg_646 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_288 <= add_ln28_1_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_304_p2 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((grp_fu_304_p2 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_296 <= add_ln28_2_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_650_pp0_iter15_reg == 1'd1) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sdiv_ln34_reg_702 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_650_pp0_iter15_reg == 1'd0) & (icmp_ln24_reg_636_pp0_iter15_reg == 1'd1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sdiv_ln38_reg_697 <= grp_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_1_reg_669_pp0_iter14_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        udiv_ln30_1_reg_707 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_646_pp0_iter14_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        udiv_ln30_reg_692 <= grp_fu_447_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to19 = 1'b1;
    end else begin
        ap_idle_pp0_1to19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_idx_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_idx_3 = idx_fu_84;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_439_ce = 1'b1;
    end else begin
        grp_fu_439_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_443_ce = 1'b1;
    end else begin
        grp_fu_443_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_447_ce = 1'b1;
    end else begin
        grp_fu_447_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_496_ce = 1'b1;
    end else begin
        grp_fu_496_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_500_ce = 1'b1;
    end else begin
        grp_fu_500_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636 == 1'd1))) begin
        image_in_blk_n_AR = m_axi_image_in_ARREADY;
    end else begin
        image_in_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)))) begin
        image_in_blk_n_R = m_axi_image_in_RVALID;
    end else begin
        image_in_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        image_out_blk_n_AW = m_axi_image_out_AWREADY;
    end else begin
        image_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        image_out_blk_n_B = m_axi_image_out_BVALID;
    end else begin
        image_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        image_out_blk_n_W = m_axi_image_out_WREADY;
    end else begin
        image_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636 == 1'd1))) begin
        m_axi_image_in_ARVALID = 1'b1;
    end else begin
        m_axi_image_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1)))) begin
        m_axi_image_in_RREADY = 1'b1;
    end else begin
        m_axi_image_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_image_out_AWADDR = reg_296_pp0_iter15_reg;
    end else if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_image_out_AWADDR = reg_288_pp0_iter15_reg;
    end else begin
        m_axi_image_out_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln28_reg_646_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_image_out_AWVALID = 1'b1;
    end else begin
        m_axi_image_out_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_image_out_BREADY = 1'b1;
    end else begin
        m_axi_image_out_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_image_out_WDATA = trunc_ln30_1_fu_542_p1;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_image_out_WDATA = ap_phi_reg_pp0_iter17_storereflowmerge3_reg_264;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_image_out_WDATA = trunc_ln30_fu_538_p1;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_image_out_WDATA = ap_phi_reg_pp0_iter16_storereflowmerge_reg_254;
    end else begin
        m_axi_image_out_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln28_reg_646_pp0_iter16_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_image_out_WVALID = 1'b1;
    end else begin
        m_axi_image_out_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to19 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_1_fu_423_p2 = (idx_3_reg_629_pp0_iter5_reg + image_out_offset);

assign add_ln28_2_fu_433_p2 = (idx_4_fu_428_p2 + image_out_offset);

assign add_ln28_fu_360_p2 = (ap_sig_allocacmp_idx_3 + image_in_offset);

assign add_ln34_1_fu_533_p2 = (trunc_ln34_1_fu_529_p1 + high_new_threshold);

assign add_ln34_fu_515_p2 = (trunc_ln34_fu_512_p1 + high_new_threshold);

assign add_ln38_1_fu_524_p2 = (trunc_ln38_1_fu_520_p1 + low_new_threshold);

assign add_ln38_fu_507_p2 = (trunc_ln38_fu_504_p1 + low_new_threshold);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_block_state35_io)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state33_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_block_state35_io)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state33_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state34_io)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter19 == 1'b1) & (((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state34_io)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4 = ((icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter5 = ((icmp_ln24_reg_636_pp0_iter4_reg == 1'd1) & (m_axi_image_in_RVALID == 1'b0));
end

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((icmp_ln24_reg_636 == 1'd1) & (m_axi_image_in_ARREADY == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_io = (((icmp_ln28_reg_646_pp0_iter15_reg == 1'd0) & (m_axi_image_out_AWREADY == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter15_reg == 1'd1) & (m_axi_image_out_AWREADY == 1'b0)));
end

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = (((icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd1) & (m_axi_image_out_AWREADY == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0) & (m_axi_image_out_AWREADY == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter16_reg == 1'd1) & (m_axi_image_out_WREADY == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter16_reg == 1'd0) & (m_axi_image_out_WREADY == 1'b0)));
end

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_io = (((icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd1) & (m_axi_image_out_WREADY == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter16_reg == 1'd0) & (m_axi_image_out_WREADY == 1'b0)));
end

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp0_stage0_iter19 = (((icmp_ln28_reg_646_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_reg_646_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage1_iter19 = (((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd1) & (m_axi_image_out_BVALID == 1'b0)) | ((icmp_ln28_1_reg_669_pp0_iter18_reg == 1'd0) & (m_axi_image_out_BVALID == 1'b0)));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_901 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_924 = ((icmp_ln32_1_reg_673_pp0_iter15_reg == 1'd1) & (icmp_ln24_reg_636_pp0_iter16_reg == 1'd1) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_condition_927 = ((icmp_ln32_1_reg_673_pp0_iter15_reg == 1'd0) & (icmp_ln24_reg_636_pp0_iter16_reg == 1'd1) & (icmp_ln28_1_reg_669_pp0_iter15_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_storereflowmerge3_reg_264 = 'bx;

assign ap_phi_reg_pp0_iter0_storereflowmerge_reg_254 = 'bx;

assign grp_fu_304_p2 = ((reg_284 < low_threshold) ? 1'b1 : 1'b0);

assign grp_fu_309_p2 = ((reg_284 > high_threshold) ? 1'b1 : 1'b0);

assign grp_fu_439_p1 = sext_ln24_cast_reg_611;

assign grp_fu_443_p1 = sext_ln38_cast_reg_581;

assign grp_fu_447_p1 = low_threshold_cast4_cast_reg_599;

assign grp_fu_492_p1 = sext_ln24_cast_reg_611;

assign grp_fu_496_p1 = sext_ln38_cast_reg_581;

assign grp_fu_500_p1 = low_threshold_cast4_cast_reg_599;

assign high_threshold_cast6_cast_fu_322_p1 = high_threshold_cast6;

assign icmp_ln24_fu_354_p2 = ((ap_sig_allocacmp_idx_3 < image_length) ? 1'b1 : 1'b0);

assign idx_4_fu_428_p2 = (idx_3_reg_629_pp0_iter5_reg | 32'd1);

assign idx_5_fu_372_p2 = (idx_3_reg_629 + 32'd2);

assign low_new_threshold_cast3_cast_fu_330_p1 = low_new_threshold_cast3;

assign low_threshold_cast4_cast_fu_326_p1 = low_threshold_cast4;

assign low_threshold_cast7_cast_fu_342_p1 = low_threshold_cast7;

assign m_axi_image_in_ARADDR = image_in_addr_reg_640;

assign m_axi_image_in_ARBURST = 2'd0;

assign m_axi_image_in_ARCACHE = 4'd0;

assign m_axi_image_in_ARID = 1'd0;

assign m_axi_image_in_ARLEN = 32'd2;

assign m_axi_image_in_ARLOCK = 2'd0;

assign m_axi_image_in_ARPROT = 3'd0;

assign m_axi_image_in_ARQOS = 4'd0;

assign m_axi_image_in_ARREGION = 4'd0;

assign m_axi_image_in_ARSIZE = 3'd0;

assign m_axi_image_in_ARUSER = 1'd0;

assign m_axi_image_in_AWADDR = 32'd0;

assign m_axi_image_in_AWBURST = 2'd0;

assign m_axi_image_in_AWCACHE = 4'd0;

assign m_axi_image_in_AWID = 1'd0;

assign m_axi_image_in_AWLEN = 32'd0;

assign m_axi_image_in_AWLOCK = 2'd0;

assign m_axi_image_in_AWPROT = 3'd0;

assign m_axi_image_in_AWQOS = 4'd0;

assign m_axi_image_in_AWREGION = 4'd0;

assign m_axi_image_in_AWSIZE = 3'd0;

assign m_axi_image_in_AWUSER = 1'd0;

assign m_axi_image_in_AWVALID = 1'b0;

assign m_axi_image_in_BREADY = 1'b0;

assign m_axi_image_in_WDATA = 8'd0;

assign m_axi_image_in_WID = 1'd0;

assign m_axi_image_in_WLAST = 1'b0;

assign m_axi_image_in_WSTRB = 1'd0;

assign m_axi_image_in_WUSER = 1'd0;

assign m_axi_image_in_WVALID = 1'b0;

assign m_axi_image_out_ARADDR = 32'd0;

assign m_axi_image_out_ARBURST = 2'd0;

assign m_axi_image_out_ARCACHE = 4'd0;

assign m_axi_image_out_ARID = 1'd0;

assign m_axi_image_out_ARLEN = 32'd0;

assign m_axi_image_out_ARLOCK = 2'd0;

assign m_axi_image_out_ARPROT = 3'd0;

assign m_axi_image_out_ARQOS = 4'd0;

assign m_axi_image_out_ARREGION = 4'd0;

assign m_axi_image_out_ARSIZE = 3'd0;

assign m_axi_image_out_ARUSER = 1'd0;

assign m_axi_image_out_ARVALID = 1'b0;

assign m_axi_image_out_AWBURST = 2'd0;

assign m_axi_image_out_AWCACHE = 4'd0;

assign m_axi_image_out_AWID = 1'd0;

assign m_axi_image_out_AWLEN = 32'd1;

assign m_axi_image_out_AWLOCK = 2'd0;

assign m_axi_image_out_AWPROT = 3'd0;

assign m_axi_image_out_AWQOS = 4'd0;

assign m_axi_image_out_AWREGION = 4'd0;

assign m_axi_image_out_AWSIZE = 3'd0;

assign m_axi_image_out_AWUSER = 1'd0;

assign m_axi_image_out_RREADY = 1'b0;

assign m_axi_image_out_WID = 1'd0;

assign m_axi_image_out_WLAST = 1'b0;

assign m_axi_image_out_WSTRB = 1'd1;

assign m_axi_image_out_WUSER = 1'd0;

assign mul_ln30_1_fu_487_p0 = mul_ln30_1_fu_487_p00;

assign mul_ln30_1_fu_487_p00 = reg_284;

assign mul_ln30_1_fu_487_p1 = low_new_threshold_cast3_cast_reg_605;

assign mul_ln30_fu_418_p0 = mul_ln30_fu_418_p00;

assign mul_ln30_fu_418_p00 = reg_284;

assign mul_ln30_fu_418_p1 = low_new_threshold_cast3_cast_reg_605;

assign mul_ln34_1_fu_482_p1 = sext_ln34_1_cast_reg_587;

assign mul_ln34_fu_413_p1 = sext_ln34_1_cast_reg_587;

assign mul_ln38_1_fu_468_p1 = sext_ln38_2_cast_reg_617;

assign mul_ln38_fu_399_p1 = sext_ln38_2_cast_reg_617;

assign sext_ln24_cast_fu_334_p1 = $signed(sext_ln24);

assign sext_ln34_1_cast_fu_318_p1 = $signed(sext_ln34_1);

assign sext_ln38_2_cast_fu_338_p1 = $signed(sext_ln38_2);

assign sext_ln38_cast_fu_314_p1 = $signed(sext_ln38);

assign sub_ln34_1_fu_473_p2 = (zext_ln28_2_fu_451_p1 - high_threshold_cast6_cast_reg_593);

assign sub_ln34_fu_404_p2 = (zext_ln28_fu_382_p1 - high_threshold_cast6_cast_reg_593);

assign sub_ln38_1_fu_459_p2 = (zext_ln28_2_fu_451_p1 - low_threshold_cast7_cast_reg_623);

assign sub_ln38_fu_390_p2 = (zext_ln28_fu_382_p1 - low_threshold_cast7_cast_reg_623);

assign trunc_ln30_1_fu_542_p1 = udiv_ln30_1_reg_707_pp0_iter16_reg[7:0];

assign trunc_ln30_fu_538_p1 = udiv_ln30_reg_692_pp0_iter16_reg[7:0];

assign trunc_ln34_1_fu_529_p1 = grp_fu_496_p2[7:0];

assign trunc_ln34_fu_512_p1 = sdiv_ln34_reg_702[7:0];

assign trunc_ln38_1_fu_520_p1 = grp_fu_492_p2[7:0];

assign trunc_ln38_fu_504_p1 = sdiv_ln38_reg_697[7:0];

assign zext_ln28_2_fu_451_p1 = reg_284;

assign zext_ln28_fu_382_p1 = reg_284;

always @ (posedge ap_clk) begin
    high_threshold_cast6_cast_reg_593[8] <= 1'b0;
    low_threshold_cast4_cast_reg_599[15:8] <= 8'b00000000;
    low_new_threshold_cast3_cast_reg_605[15:8] <= 8'b00000000;
    low_threshold_cast7_cast_reg_623[8] <= 1'b0;
end

endmodule //LinearContrastStretching_LinearContrastStretching_Pipeline_VITIS_LOOP_24_1
